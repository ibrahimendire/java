 pipeline {
        agent any
                        

                        stages {
                            stage('Test') {
                                steps {
                                    sh 'mvn test'
                                }
                            }
                            stage('Build') {
                                steps {
                                    sh 'mvn clean install'
                                }
                            }
                            
                            
                         stage('Test before sonarqube analysis'){
                              steps {                             
                               echo "It is working========================="
                               }
                             }
                             
                             
                             
                             stage('Build') {
                                tools {
                                       jdk "jdk9" // the name you have given the JDK installation using the JDK manager (Global Tool Configuration)
                                   }
                                   steps {
                                       sh 'mvn compile'
                                   }
                               }
                               stage('SonarQube analysis') {
                                   tools {
                                       jdk "jdk9" // the name you have given the JDK installation using the JDK manager (Global Tool Configuration)
                                   }
                                   environment {
                                       scannerHome = tool 'SonarQube Scanner' // the name you have given the Sonar Scanner (Global Tool Configuration)
                                   }
                                   steps {
                                       withSonarQubeEnv(installationName: 'SonarQube') {
                                           sh 'mvn sonar:sonar'
                                       }
                                   }
                               } 
                             
                             
                             
                               stage('Test after sonarQube'){
                              steps {                             
                               echo "It looks like working========================="
                               }
                             }
                             
                             
                             
                        stage('SonarQube analysis') {
                                
                                steps {
                                    withSonarQubeEnv('SonarScanner') {
                                        sh "mvn sonar:sonar \
                                            -Dsonar.host.url=http://localhost:1010 \
                                            -Dsonar.projectKey=java \
                                            -Dsonar.login=credentials('sonarqube-global-Secrete-text') \
                                            -Dsonar.projectName='java' \
                                            -Dsonar.projectVersion=1.0.0 \
                                            -Dsonar.java.binaries=target/classes"
                                       }
                                   }      
                                 }
                                 
                                 

                        }
                       
                        
                              
                        /* post{
                                failure{
                                    
                                    
                                    slackSend( channel: "#ibrahim", token: "slack-jenkins-secret-key token", color: "danger", message: "Ibrahim sorry to hear that your Build is Failed: ${env.BUILD_DISPLAY_NAME} with Build ID: (${env.BUILD_ID}) ${custom_msg()}")
                                }
                                success {
                            slackSend(channel: "#ibrahim", 
                                    token: "slack-jenkins-secret-key token", 
                                    color: "good", 
                                    message: "Congragulation Ibrahim, Your Build is Succeeded: ${env.BUILD_DISPLAY_NAME} (${env.BUILD_ID})")
                        }
                            }
                            */
                    }

